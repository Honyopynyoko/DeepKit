export declare enum BrokerType {
    Ack = 0,
    Error = 1,
    Chunk = 2,
    Publish = 100,
    Subscribe = 101,
    Unsubscribe = 102,
    ResponseSubscribeMessage = 103,
    Set = 104,
    Get = 105,
    Increment = 106,
    ResponseIncrement = 107,
    Delete = 108,
    ResponseGet = 109,
    Lock = 110,
    Unlock = 111,
    IsLocked = 112,
    TryLock = 113,
    ResponseLock = 114,
    ResponseLockFailed = 115,
    ResponseIsLock = 116,
    PublishEntityFields = 117,
    UnsubscribeEntityFields = 118,
    AllEntityFields = 119,
    EntityFields = 120
}
export declare const brokerDelete: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    n: import("@deepkit/type").FieldDecoratorResult<string>;
}>>;
export declare const brokerIncrement: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    n: import("@deepkit/type").FieldDecoratorResult<string>;
    v: import("@deepkit/type").FieldDecoratorResult<number | undefined>;
}>>;
export declare const brokerResponseIncrement: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    v: import("@deepkit/type").FieldDecoratorResult<number>;
}>>;
export declare const brokerSet: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    n: import("@deepkit/type").FieldDecoratorResult<string>;
    v: import("@deepkit/type").FieldDecoratorResult<Uint8Array>;
}>>;
export declare const brokerResponseGet: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    v: import("@deepkit/type").FieldDecoratorResult<Uint8Array | undefined>;
}>>;
export declare const brokerGet: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    n: import("@deepkit/type").FieldDecoratorResult<string>;
}>>;
export declare const brokerPublish: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    c: import("@deepkit/type").FieldDecoratorResult<string>;
    v: import("@deepkit/type").FieldDecoratorResult<Uint8Array>;
}>>;
export declare const brokerSubscribe: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    c: import("@deepkit/type").FieldDecoratorResult<string>;
}>>;
export declare const brokerResponseSubscribeMessage: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    c: import("@deepkit/type").FieldDecoratorResult<string>;
    v: import("@deepkit/type").FieldDecoratorResult<Uint8Array>;
}>>;
export declare const brokerLockId: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    id: import("@deepkit/type").FieldDecoratorResult<string>;
}>>;
export declare const brokerLock: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    id: import("@deepkit/type").FieldDecoratorResult<string>;
    ttl: import("@deepkit/type").FieldDecoratorResult<number>;
    timeout: import("@deepkit/type").FieldDecoratorResult<number | undefined>;
}>>;
export declare const brokerResponseIsLock: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    v: import("@deepkit/type").FieldDecoratorResult<boolean>;
}>>;
export declare const brokerEntityFields: import("@deepkit/type").ClassSchema<import("@deepkit/type").ExtractClassDefinition<{
    name: import("@deepkit/type").FieldDecoratorResult<string>;
    fields: import("@deepkit/type").FieldDecoratorResult<string[]>;
}>>;
