"use strict";
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.digitByteSize = exports.BSON_BINARY_SUBTYPE_BIGINT = exports.BSON_BINARY_SUBTYPE_USER_DEFINED = exports.BSON_BINARY_SUBTYPE_MD5 = exports.BSON_BINARY_SUBTYPE_UUID = exports.BSON_BINARY_SUBTYPE_UUID_OLD = exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = exports.BSON_BINARY_SUBTYPE_FUNCTION = exports.BSON_BINARY_SUBTYPE_DEFAULT = exports.BSON_DATA_MAX_KEY = exports.BSON_DATA_MIN_KEY = exports.BSON_DATA_DECIMAL128 = exports.BSON_DATA_LONG = exports.BSON_DATA_TIMESTAMP = exports.BSON_DATA_INT = exports.BSON_DATA_CODE_W_SCOPE = exports.BSON_DATA_SYMBOL = exports.BSON_DATA_CODE = exports.BSON_DATA_DBPOINTER = exports.BSON_DATA_REGEXP = exports.BSON_DATA_NULL = exports.BSON_DATA_DATE = exports.BSON_DATA_BOOLEAN = exports.BSON_DATA_OID = exports.BSON_DATA_UNDEFINED = exports.BSON_DATA_BINARY = exports.BSON_DATA_ARRAY = exports.BSON_DATA_OBJECT = exports.BSON_DATA_STRING = exports.BSON_DATA_NUMBER = exports.TWO_PWR_32_DBL_N = void 0;
exports.TWO_PWR_32_DBL_N = (1 << 16) * (1 << 16);
exports.BSON_DATA_NUMBER = 1;
exports.BSON_DATA_STRING = 2;
exports.BSON_DATA_OBJECT = 3;
exports.BSON_DATA_ARRAY = 4;
exports.BSON_DATA_BINARY = 5;
exports.BSON_DATA_UNDEFINED = 6;
exports.BSON_DATA_OID = 7;
exports.BSON_DATA_BOOLEAN = 8;
exports.BSON_DATA_DATE = 9;
exports.BSON_DATA_NULL = 10;
exports.BSON_DATA_REGEXP = 11;
exports.BSON_DATA_DBPOINTER = 12;
exports.BSON_DATA_CODE = 13;
exports.BSON_DATA_SYMBOL = 14;
exports.BSON_DATA_CODE_W_SCOPE = 15;
exports.BSON_DATA_INT = 16;
exports.BSON_DATA_TIMESTAMP = 17;
exports.BSON_DATA_LONG = 18;
exports.BSON_DATA_DECIMAL128 = 19;
exports.BSON_DATA_MIN_KEY = 0xff;
exports.BSON_DATA_MAX_KEY = 0x7f;
exports.BSON_BINARY_SUBTYPE_DEFAULT = 0;
exports.BSON_BINARY_SUBTYPE_FUNCTION = 1;
exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;
exports.BSON_BINARY_SUBTYPE_UUID_OLD = 3;
exports.BSON_BINARY_SUBTYPE_UUID = 4;
exports.BSON_BINARY_SUBTYPE_MD5 = 5;
exports.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;
exports.BSON_BINARY_SUBTYPE_BIGINT = 127;
function digitByteSize(v) {
    if (v < 10)
        return 2;
    if (v < 100)
        return 3;
    if (v < 1000)
        return 4;
    if (v < 10000)
        return 5;
    if (v < 100000)
        return 6;
    if (v < 1000000)
        return 7;
    if (v < 10000000)
        return 8;
    if (v < 100000000)
        return 9;
    if (v < 1000000000)
        return 10;
    return 11;
}
exports.digitByteSize = digitByteSize;
//# sourceMappingURL=utils.js.map