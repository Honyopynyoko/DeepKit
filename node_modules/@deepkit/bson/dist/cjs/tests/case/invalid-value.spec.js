"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
require("reflect-metadata");
const bson_1 = __importDefault(require("bson"));
const type_1 = require("@deepkit/type");
const bson_jit_parser_1 = require("../../src/bson-jit-parser");
const bson_serialize_1 = require("../../src/bson-serialize");
const { deserialize, serialize } = bson_1.default;
globals_1.test('invalid', () => {
    const s = type_1.t.schema({
        id: type_1.t.number,
    });
    {
        const bson = serialize({ id: 23 });
        globals_1.expect(bson_jit_parser_1.getBSONDecoder(s)(bson)).toEqual({ id: 23 });
    }
    {
        const bson = serialize({ id: 'asd' });
        globals_1.expect(bson_jit_parser_1.getBSONDecoder(s)(bson)).toEqual({});
    }
    {
        const bson = serialize({});
        globals_1.expect(bson_jit_parser_1.getBSONDecoder(s)(bson)).toEqual({});
    }
    {
        const bson = bson_serialize_1.getBSONSerializer(s)({ id: 'sd' });
        globals_1.expect(bson_jit_parser_1.getBSONDecoder(s)(bson)).toEqual({});
    }
    {
        const bson = bson_serialize_1.getBSONSerializer(s)({ id: false });
        globals_1.expect(bson_jit_parser_1.getBSONDecoder(s)(bson)).toEqual({});
    }
    {
        const bson = bson_serialize_1.getBSONSerializer(s)({ id: {} });
        globals_1.expect(bson_jit_parser_1.getBSONDecoder(s)(bson)).toEqual({});
    }
    {
        const bson = bson_serialize_1.getBSONSerializer(s)({ id: NaN });
        globals_1.expect(bson_jit_parser_1.getBSONDecoder(s)(bson)).toEqual({ id: NaN });
    }
});
//# sourceMappingURL=invalid-value.spec.js.map