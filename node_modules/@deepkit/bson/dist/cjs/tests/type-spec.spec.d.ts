import { ClassType } from '@deepkit/core';
import { ClassSchema, FieldDecoratorResult } from '@deepkit/type';
import 'reflect-metadata';
/**
 * When the value is not existent anymore (don't confuse with being undefined).
 * Equal to check with `in`.
 */
export declare const RoundTripExcluded: unique symbol;
export declare function roundTrip<T>(s: ClassSchema<T> | ClassType<T> | FieldDecoratorResult<T>, value: T): T;
export declare function serializeToJson<T>(s: ClassSchema<T> | ClassType<T> | FieldDecoratorResult<T>, value: T): T;
export declare function deserializeFromJson<T>(s: ClassSchema<T> | ClassType<T> | FieldDecoratorResult<T>, value: T): T;
