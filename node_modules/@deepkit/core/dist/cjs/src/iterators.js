"use strict";
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.eachPair = exports.each = exports.eachKey = void 0;
/** @public */
function* eachKey(object) {
    if (Array.isArray(object)) {
        for (let i = 0; i < object.length; i++) {
            yield i;
        }
    }
    else {
        for (const i in object) {
            if (object.hasOwnProperty(i)) {
                yield i;
            }
        }
    }
}
exports.eachKey = eachKey;
/**
 * Iterator for each value of an array or object.
 *
 * @example
 * ```
 * for (const v of each(['a', 'b']) {
 *    console.log(v); //a, b
 * }
 * ```
 *
 * @public
 * @category iterator
 */
function* each(object) {
    if (Array.isArray(object)) {
        for (let i = 0; i < object.length; i++) {
            yield object[i];
        }
    }
    else {
        for (const i in object) {
            if (object.hasOwnProperty(i)) {
                yield object[i];
            }
        }
    }
}
exports.each = each;
/** @public */
function* eachPair(object) {
    if (Array.isArray(object)) {
        for (let i = 0; i < object.length; i++) {
            yield [i, object[i]];
        }
    }
    else {
        for (const i in object) {
            if (object.hasOwnProperty(i)) {
                yield [i, object[i]];
            }
        }
    }
}
exports.eachPair = eachPair;
//# sourceMappingURL=iterators.js.map