"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const compiler_1 = require("../src/compiler");
globals_1.test('compiler', () => {
    const compiler = new compiler_1.CompilerContext();
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_0');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_1');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_2');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_3');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_4');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_5');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_6');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_7');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_8');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_9');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_10');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_11');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_12');
    globals_1.expect(compiler.reserveVariable('a')).toBe('a_13');
});
globals_1.test('compiler code', () => {
    const compiler = new compiler_1.CompilerContext();
    globals_1.expect(compiler.build('return 123;')()).toBe(123);
    globals_1.expect(compiler.build('return a;', 'a')(444)).toBe(444);
    globals_1.expect(compiler.build('return a + b;', 'a', 'b')(444, 555)).toBe(444 + 555);
    const a = compiler.reserveVariable('a', 1337);
    globals_1.expect(compiler.context.get(a)).toBe(1337);
    globals_1.expect(compiler.build(`return ${a}`)()).toBe(1337);
});
//# sourceMappingURL=compiler.spec.js.map