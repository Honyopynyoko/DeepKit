"use strict";
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Application = void 0;
const kernel_1 = require("./kernel");
const application_service_container_1 = require("./application-service-container");
const app_1 = require("@deepkit/app");
class Application extends app_1.CommandApplication {
    constructor(appModule, providers = [], imports = []) {
        if (!appModule.hasImport(kernel_1.KernelModule))
            appModule.addImport(kernel_1.KernelModule);
        super(appModule, providers, imports, new application_service_container_1.ApplicationServiceContainer(appModule, providers, imports.slice(0)));
    }
    static create(module) {
        if (module instanceof app_1.AppModule) {
            return new Application(module);
        }
        else {
            //see: https://github.com/microsoft/TypeScript/issues/13995
            const mod = module;
            return new Application(new app_1.AppModule(mod));
        }
    }
}
exports.Application = Application;
//# sourceMappingURL=application.js.map