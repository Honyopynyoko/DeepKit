import { AppModuleConfig } from '@deepkit/app';
export declare const kernelConfig: AppModuleConfig<{
    host: import("@deepkit/type").FieldDecoratorResult<string>;
    port: import("@deepkit/type").FieldDecoratorResult<number>;
    httpsPort: import("@deepkit/type").FieldDecoratorResult<number | undefined>;
    selfSigned: import("@deepkit/type").FieldDecoratorResult<boolean | undefined>;
    keepAliveTimeout: import("@deepkit/type").FieldDecoratorResult<number | undefined>;
    path: import("@deepkit/type").FieldDecoratorResult<string>;
    workers: import("@deepkit/type").FieldDecoratorResult<number>;
    ssl: import("@deepkit/type").FieldDecoratorResult<boolean>;
    sslOptions: import("@deepkit/type").FieldDecoratorResult<any>;
    sslKey: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    sslCertificate: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    sslCa: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    sslCrl: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    server: import("@deepkit/type").FieldDecoratorResult<any>;
    maxPayload: import("@deepkit/type").FieldDecoratorResult<number | undefined>;
    publicDir: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    debug: import("@deepkit/type").FieldDecoratorResult<boolean>;
    debugUrl: import("@deepkit/type").FieldDecoratorResult<string>;
    varPath: import("@deepkit/type").FieldDecoratorResult<string>;
    debugStorePath: import("@deepkit/type").FieldDecoratorResult<string>;
    httpLog: import("@deepkit/type").FieldDecoratorResult<boolean>;
    session: import("@deepkit/type").FieldDecoratorResult<any>;
    databases: import("@deepkit/type").FieldDecoratorResult<any[] | undefined>;
    migrateOnStartup: import("@deepkit/type").FieldDecoratorResult<boolean>;
    migrationDir: import("@deepkit/type").FieldDecoratorResult<string>;
}>;
declare const KernelConfigAll_base: import("@deepkit/core").ClassType<import("@deepkit/type").ExtractClassDefinition<{
    host: import("@deepkit/type").FieldDecoratorResult<string>;
    port: import("@deepkit/type").FieldDecoratorResult<number>;
    httpsPort: import("@deepkit/type").FieldDecoratorResult<number | undefined>;
    selfSigned: import("@deepkit/type").FieldDecoratorResult<boolean | undefined>;
    keepAliveTimeout: import("@deepkit/type").FieldDecoratorResult<number | undefined>;
    path: import("@deepkit/type").FieldDecoratorResult<string>;
    workers: import("@deepkit/type").FieldDecoratorResult<number>;
    ssl: import("@deepkit/type").FieldDecoratorResult<boolean>;
    sslOptions: import("@deepkit/type").FieldDecoratorResult<any>;
    sslKey: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    sslCertificate: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    sslCa: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    sslCrl: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    server: import("@deepkit/type").FieldDecoratorResult<any>;
    maxPayload: import("@deepkit/type").FieldDecoratorResult<number | undefined>;
    publicDir: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    debug: import("@deepkit/type").FieldDecoratorResult<boolean>;
    debugUrl: import("@deepkit/type").FieldDecoratorResult<string>;
    varPath: import("@deepkit/type").FieldDecoratorResult<string>;
    debugStorePath: import("@deepkit/type").FieldDecoratorResult<string>;
    httpLog: import("@deepkit/type").FieldDecoratorResult<boolean>;
    session: import("@deepkit/type").FieldDecoratorResult<any>;
    databases: import("@deepkit/type").FieldDecoratorResult<any[] | undefined>;
    migrateOnStartup: import("@deepkit/type").FieldDecoratorResult<boolean>;
    migrationDir: import("@deepkit/type").FieldDecoratorResult<string>;
}>>;
export declare class KernelConfigAll extends KernelConfigAll_base {
}
export {};
