import { ModuleOptions, ServiceContainer } from '@deepkit/app';
import { Context, ProviderWithScope } from '@deepkit/injector';
import { ClassType } from '@deepkit/core';
import { HttpControllers } from '@deepkit/http';
export declare type RpcController = {
    onDestroy?: () => Promise<void>;
    onInit?: () => Promise<void>;
};
export declare class RpcControllers {
    readonly controllers: Map<string, ClassType<any>>;
    resolveController(name: string): ClassType;
}
export declare class ApplicationServiceContainer<C extends ModuleOptions = ModuleOptions> extends ServiceContainer<C> {
    readonly rpcControllers: RpcControllers;
    readonly httpControllers: HttpControllers;
    process(): void;
    protected setupController(providers: ProviderWithScope[], controller: ClassType, context: Context): void;
}
