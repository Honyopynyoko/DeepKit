import { AppLocker } from './app-locker';
import { AppModule } from '@deepkit/app';
import { Broker, BrokerServer } from './broker';
export declare class BrokerListener {
    protected broker: Broker;
    protected brokerServer: BrokerServer;
    protected startOnBootstrap: boolean;
    constructor(broker: Broker, brokerServer: BrokerServer, startOnBootstrap: boolean);
    onMainBootstrap(): Promise<void>;
    onMainShutdown(): Promise<void>;
}
export declare const BrokerModule: AppModule<{
    listeners: (typeof BrokerListener)[];
    config: import("@deepkit/app").AppModuleConfig<{
        listen: import("@deepkit/type").FieldDecoratorResult<string>;
        host: import("@deepkit/type").FieldDecoratorResult<string>;
        startOnBootstrap: import("@deepkit/type").FieldDecoratorResult<boolean>;
    }>;
    providers: (typeof Broker | typeof BrokerServer | typeof AppLocker)[];
    exports: (typeof Broker | typeof BrokerServer | typeof AppLocker)[];
}, "broker">;
