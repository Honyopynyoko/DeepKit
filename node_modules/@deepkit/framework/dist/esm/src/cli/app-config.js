/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { cli } from '@deepkit/app';
import { DebugController } from '../debug/debug.controller';
let AppConfigController = class AppConfigController {
    constructor(debug) {
        this.debug = debug;
    }
    async execute() {
        const configs = this.debug.configuration();
        console.log('Application config');
        console.table(configs.appConfig);
        console.log('Modules config');
        console.table(configs.modulesConfig);
    }
};
AppConfigController = __decorate([
    cli.controller('app:config', {}),
    __metadata("design:paramtypes", [DebugController])
], AppConfigController);
export { AppConfigController };
//# sourceMappingURL=app-config.js.map