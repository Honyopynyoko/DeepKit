"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpLogger = void 0;
const injector_1 = require("@deepkit/injector");
const logger_1 = require("@deepkit/logger");
const event_1 = require("@deepkit/event");
const http_1 = require("./http");
let HttpLogger = class HttpLogger {
    constructor(logger) {
        this.logger = logger;
    }
    onHttpRequest(event) {
        this.logger.log(event.request.connection.remoteAddress, '-', event.request.method, `"${event.request.url}"`, event.response.statusCode, `"${event.request.headers.referer || ''}"`);
    }
};
__decorate([
    event_1.eventDispatcher.listen(http_1.httpWorkflow.onResponse, 101) //101 is right after 100 default listener
    ,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], HttpLogger.prototype, "onHttpRequest", null);
HttpLogger = __decorate([
    injector_1.injectable(),
    __metadata("design:paramtypes", [logger_1.Logger])
], HttpLogger);
exports.HttpLogger = HttpLogger;
//# sourceMappingURL=logger.js.map