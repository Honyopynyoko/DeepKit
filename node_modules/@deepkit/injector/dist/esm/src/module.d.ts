import { ClassType } from '@deepkit/core';
import { ConfiguredProviderRegistry, ConfigureProvider } from './injector';
export declare class InjectorModule<N extends string = string, C extends {
    [name: string]: any;
} = any> {
    name: N;
    config: C;
    protected setupProviderRegistry: ConfiguredProviderRegistry;
    constructor(name: N, config: C);
    getName(): N;
    getConfig(): C;
    setConfig(config: C): void;
    getConfiguredProviderRegistry(): ConfiguredProviderRegistry;
    /**
     * Returns a configuration object that reflects the API of the given ClassType or token. Each call
     * is scheduled and executed once the provider has been created by the dependency injection container.
     */
    setupProvider<T extends ClassType<T> | any>(classTypeOrToken: T): ConfigureProvider<T extends ClassType<infer C> ? C : T>;
}
