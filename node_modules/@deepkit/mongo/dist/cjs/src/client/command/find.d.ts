import { Command } from './command';
import { ClassSchema, ExtractClassType } from '@deepkit/type';
import { ClassType } from '@deepkit/core';
import { DEEP_SORT } from '../../query.model';
export declare class FindCommand<T extends ClassSchema | ClassType> extends Command {
    classSchema: T;
    filter: {
        [name: string]: any;
    };
    projection?: {
        [name: string]: 0 | 1;
    } | undefined;
    sort?: DEEP_SORT<any> | undefined;
    limit: number;
    skip: number;
    constructor(classSchema: T, filter?: {
        [name: string]: any;
    }, projection?: {
        [name: string]: 0 | 1;
    } | undefined, sort?: DEEP_SORT<any> | undefined, limit?: number, skip?: number);
    execute(config: any): Promise<ExtractClassType<T>[]>;
    needsWritableHost(): boolean;
}
