import { Host } from './host';
import { ConnectionOptions } from './options';
import { ClassSchema } from '@deepkit/type';
import { ClassType } from '@deepkit/core';
/**
 * Default URL:
 * mongodb://mongodb0.example.com:27017
 *
 * ReplicaSet UR:
 * mongodb://mongodb0.example.com:27017,mongodb1.example.com:27017,mongodb2.example.com:27017/?replicaSet=myRepl
 *
 * Shared URL:
 * mongodb://mongos0.example.com:27017,mongos1.example.com:27017,mongos2.example.com:27017
 *
 * SVR URL:
 * mongodb+srv://server.example.com/
 */
export declare class MongoClientConfig {
    readonly hosts: Host[];
    protected hostsFetchedMS?: number;
    /**
     * In seconds.
     */
    srvCacheTimeout: number;
    defaultDb?: string;
    authUser?: string;
    authPassword?: string;
    options: ConnectionOptions;
    isSrv: boolean;
    srvDomain: string;
    constructor(connectionString: string);
    protected parseConnectionString(url: string): void;
    getAuthSource(): string;
    protected resolveSrvHosts(): Promise<{
        options: string;
        hosts: {
            hostname: string;
            port: number;
        }[];
    }>;
    newHost(hostname: string, port: number): void;
    protected findHostBy(hostname: string, port: number): Host;
    deleteHost(hostname: string, port: number): void;
    resolveCollectionName(schema: ClassSchema | ClassType): string;
    getHosts(): Promise<Host[]>;
}
