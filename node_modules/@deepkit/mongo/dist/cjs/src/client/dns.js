"use strict";
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveSrvHosts = void 0;
const dns_1 = require("dns");
const core_1 = require("@deepkit/core");
function matchesParentDomain(srvAddress, parentDomain) {
    const regex = /^.*?\./;
    const srv = `.${srvAddress.replace(regex, '')}`;
    const parent = `.${parentDomain.replace(regex, '')}`;
    return srv.endsWith(parent);
}
async function resolveSrvHosts(hostname) {
    return await core_1.asyncOperation(async (resolve, reject) => {
        dns_1.resolveSrv(`_mongodb._tcp.${hostname}`, (err, addresses) => {
            if (err)
                return reject(err);
            for (const address of addresses) {
                if (!matchesParentDomain(hostname, address.name)) {
                    return reject(new Error(`SRV Hostname doesnt match ${hostname} vs ${address.name}`));
                }
            }
            const hosts = addresses.map(v => {
                return { hostname: v.name, port: v.port };
            });
            dns_1.resolveTxt(hostname, (err, records) => {
                if (err) {
                    reject(err);
                    return;
                }
                let options = '';
                if (records.length) {
                    options = records[0].join('');
                }
                resolve({ options, hosts });
            });
        });
    });
}
exports.resolveSrvHosts = resolveSrvHosts;
//# sourceMappingURL=dns.js.map