declare type AuthMechanismProperties = {
    [name: string]: string | boolean;
};
declare const ConnectionOptions_base: import("@deepkit/core").ClassType<import("@deepkit/type").ExtractClassDefinition<{
    replicaSet: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    connectTimeoutMS: import("@deepkit/type").FieldDecoratorResult<number>;
    socketTimeoutMS: import("@deepkit/type").FieldDecoratorResult<number>;
    w: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    wtimeoutMS: import("@deepkit/type").FieldDecoratorResult<number | undefined>;
    journal: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    appName: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    retryWrites: import("@deepkit/type").FieldDecoratorResult<boolean>;
    retryReads: import("@deepkit/type").FieldDecoratorResult<boolean>;
    readConcernLevel: import("@deepkit/type").FieldDecoratorResult<"local" | "majority" | "linearizable" | "available">;
    readPreference: import("@deepkit/type").FieldDecoratorResult<"primary" | "primaryPreferred" | "secondary" | "secondaryPreferred" | "nearest" | "unknown">;
    maxStalenessSeconds: import("@deepkit/type").FieldDecoratorResult<number | undefined>;
    readPreferenceTags: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    compressors: import("@deepkit/type").FieldDecoratorResult<"snappy" | "zlib" | "zstd" | undefined>;
    zlibCompressionLevel: import("@deepkit/type").FieldDecoratorResult<number | undefined>;
    authSource: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    authMechanism: import("@deepkit/type").FieldDecoratorResult<"SCRAM-SHA-1" | "SCRAM-SHA-256" | "MONGODB-X509" | "GSSAPI" | "PLAIN" | undefined>;
    authMechanismProperties: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    gssapiServiceName: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    ssl: import("@deepkit/type").FieldDecoratorResult<boolean | undefined>;
    tlsCertificateFile: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    tlsCertificateKeyFile: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    tlsCertificateKeyFilePassword: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    tlsCAFile: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    tlsCRLFile: import("@deepkit/type").FieldDecoratorResult<string | undefined>;
    tlsAllowInvalidCertificates: import("@deepkit/type").FieldDecoratorResult<boolean | undefined>;
    tlsAllowInvalidHostnames: import("@deepkit/type").FieldDecoratorResult<boolean | undefined>;
    tlsInsecure: import("@deepkit/type").FieldDecoratorResult<boolean | undefined>;
    maxPoolSize: import("@deepkit/type").FieldDecoratorResult<number>;
    minPoolSize: import("@deepkit/type").FieldDecoratorResult<number>;
    maxIdleTimeMS: import("@deepkit/type").FieldDecoratorResult<number>;
    waitQueueTimeoutMS: import("@deepkit/type").FieldDecoratorResult<number>;
}>>;
export declare class ConnectionOptions extends ConnectionOptions_base {
    getAuthMechanismProperties(): AuthMechanismProperties;
    get checkServerIdentity(): boolean;
    get rejectUnauthorized(): boolean | undefined;
    get secondaryReadAllowed(): boolean;
}
export {};
