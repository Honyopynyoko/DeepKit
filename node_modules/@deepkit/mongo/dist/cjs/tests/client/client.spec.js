"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const client_1 = require("../../src/client/client");
const ismaster_1 = require("../../src/client/command/ismaster");
globals_1.test('connect invalid', async () => {
    const client = new client_1.MongoClient('mongodb://invalid/');
    await globals_1.expect(client.connect()).rejects.toThrow('getaddrinfo');
    client.close();
});
globals_1.test('connect handshake', async () => {
    const client = new client_1.MongoClient('mongodb://localhost/');
    await client.connect();
    globals_1.expect(client.config.hosts[0].getType()).toBe(1 /* standalone */);
    client.close();
});
globals_1.test('connect isMaster command', async () => {
    const client = new client_1.MongoClient('mongodb://localhost/');
    const response = await client.execute(new ismaster_1.IsMasterCommand);
    globals_1.expect(response.ismaster).toBe(true);
    client.close();
});
// test('connect with username/password', async () => {
//     const client = new MongoClient('mongodb://marc:password@localhost');
//     expect(client.config.authUser).toBe('marc');
//     expect(client.config.authPassword).toBe('password');
//
//     const response = await client.execute(new IsMasterCommand);
//     expect(response.ismaster).toBe(true);
//
//     client.close();
// });
// test('connect atlas', async () => {
//     const client = new MongoClient('mongodb+srv://admin:xxx@cluster0.8yylk.mongodb.net/testdb?retryWrites=true&w=majority');
//     expect(client.config.authUser).toBe('admin');
//     expect(client.config.authPassword).toBe('xxx');
//     expect(client.config.options.checkServerIdentity).toBe(true);
//     expect(client.config.options.retryWrites).toBe(true);
//     expect(client.config.options.readPreference).toBe('primary');
//     expect(client.config.options.w).toBe('majority');
//     expect(client.config.isSrv).toBe(true);
//     expect(client.config.srvDomain).toBe('cluster0.8yylk.mongodb.net');
//
//     const hosts = await client.config.getHosts();
//     expect(hosts.length).toBe(3);
//     expect(hosts[0].hostname).toBe('cluster0-shard-00-00.8yylk.mongodb.net');
//     expect(hosts[1].hostname).toBe('cluster0-shard-00-01.8yylk.mongodb.net');
//     expect(hosts[2].hostname).toBe('cluster0-shard-00-02.8yylk.mongodb.net');
//     expect(client.config.options.replicaSet).toBe('atlas-c2ym07-shard-0');
//     expect(client.config.options.authSource).toBe('admin');
//
//     await client.connect();
//
//     console.log(hosts);
//
//     // const User = t.class({
//     //     _id: t.mongoId.primary,
//     //     username: t.string,
//     //     tags: t.array(t.string),
//     //     priority: t.number,
//     // });
//     //
//     // const documents: ExtractClassType<typeof User>[] = [];
//     // for (let i = 0; i < 100; i++) {
//     //     const user = new User();
//     //     user.username = 'Peter ' + i;
//     //     user.tags = ['a', 'b', 'c'];
//     //     user.priority = i;
//     //     documents.push(user);
//     // }
//     //
//     // await client.execute(new InsertCommand(User, documents));
//
//     client.close();
// });
//
//
// test('load balancing', () => {
//     const client = new MongoClient('mongodb+srv://admin:xxx@cluster0.8yylk.mongodb.net/testdb?retryWrites=true&w=majority');
//
//
// });
//# sourceMappingURL=client.spec.js.map