"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const config_1 = require("../../src/client/config");
globals_1.test('connection string basic', async () => {
    {
        const config = new config_1.MongoClientConfig('mongodb://localhost');
        globals_1.expect(config.defaultDb).toBe('');
        globals_1.expect(await config.getHosts()).toMatchObject([{ hostname: 'localhost', port: 27017 }]);
    }
    {
        const config = new config_1.MongoClientConfig('mongodb://localhost/defaultDb');
        globals_1.expect(config.defaultDb).toBe('defaultDb');
        globals_1.expect(await config.getHosts()).toMatchObject([{ hostname: 'localhost', port: 27017 }]);
    }
    {
        const config = new config_1.MongoClientConfig('mongodb://localhost/defaultDb?connectTimeoutMS=1233');
        globals_1.expect(config.defaultDb).toBe('defaultDb');
        globals_1.expect(await config.getHosts()).toMatchObject([{ hostname: 'localhost', port: 27017 }]);
    }
});
globals_1.test('connection string password', async () => {
    {
        const config = new config_1.MongoClientConfig('mongodb://myDBReader:D1fficultP%40ssw0rd@localhost');
        globals_1.expect(config.defaultDb).toBe('');
        globals_1.expect(config.authUser).toBe('myDBReader');
        globals_1.expect(config.authPassword).toBe('D1fficultP@ssw0rd');
    }
});
globals_1.test('connection string options', async () => {
    {
        const config = new config_1.MongoClientConfig('mongodb://localhost/db?authSource=peter');
        globals_1.expect(config.options.authSource).toBe('peter');
        globals_1.expect(config.getAuthSource()).toBe('peter');
        globals_1.expect(config.options.readPreference).toBe('primary');
    }
    {
        const config = new config_1.MongoClientConfig('mongodb://localhost/db?authSource=peter&readPreference=primaryPreferred');
        globals_1.expect(config.getAuthSource()).toBe('peter');
        globals_1.expect(config.options.readPreference).toBe('primaryPreferred');
    }
});
globals_1.test('connection string basic, replica set', async () => {
    {
        const config = new config_1.MongoClientConfig('mongodb://localhost,127.0.0.1,mongo.com:26655');
        globals_1.expect(config.defaultDb).toBe('');
        globals_1.expect(await config.getHosts()).toMatchObject([
            { hostname: 'localhost', port: 27017 },
            { hostname: '127.0.0.1', port: 27017 },
            { hostname: 'mongo.com', port: 26655 },
        ]);
    }
    {
        const config = new config_1.MongoClientConfig('mongodb://localhost:26622,127.0.0.1,mongo.com:26655/defaultDb');
        globals_1.expect(config.defaultDb).toBe('defaultDb');
        globals_1.expect(await config.getHosts()).toMatchObject([
            { hostname: 'localhost', port: 26622 },
            { hostname: '127.0.0.1', port: 27017 },
            { hostname: 'mongo.com', port: 26655 },
        ]);
    }
});
globals_1.test('connection string isSrv', async () => {
    {
        const config = new config_1.MongoClientConfig('mongodb+srv://example.com');
        globals_1.expect(config.defaultDb).toBe('');
        globals_1.expect(config.isSrv).toBe(true);
        globals_1.expect(config.srvDomain).toBe('example.com');
        globals_1.expect(await config.getHosts()).toEqual([]);
    }
});
//# sourceMappingURL=connection-string.spec.js.map