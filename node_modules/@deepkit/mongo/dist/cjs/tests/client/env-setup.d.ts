/// <reference types="node" />
import { ChildProcess } from 'child_process';
interface MongoInstance {
    unixPath: string;
    closeRequested: boolean;
    process: ChildProcess;
}
export declare class MongoEnv {
    protected instances: Map<string, MongoInstance>;
    protected tempFolder: string;
    constructor();
    close(): void;
    protected getInstance(name: string): MongoInstance;
    addReplicaSet(host: string, member: string, priority: number, votes: number): Promise<any>;
    waitUntilBeingPrimary(name: string): Promise<any>;
    waitUntilBeingSecondary(name: string): Promise<any>;
    protected wait(name: string, cmd: string, checker: (res: any) => boolean, errorMessage: string): Promise<void>;
    executeJson(name: string, cmd: string): Promise<any>;
    execute(name: string, cmd: string): Promise<string>;
    addMongo(name: string, replSet?: string): Promise<void>;
}
export {};
