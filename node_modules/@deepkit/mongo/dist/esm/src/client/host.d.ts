export declare const enum HostType {
    unknown = 0,
    standalone = 1,
    primary = 2,
    secondary = 3,
    mongos = 4,
    arbiter = 5,
    other = 6,
    ghost = 7
}
interface ConnectionInterface {
    close(): any;
}
export declare class Host {
    readonly hostname: string;
    readonly port: number;
    protected type: HostType;
    protected typeSetAt?: Date;
    /**
     * Round Trip Times of the `ismaster` command, for `nearest`
     */
    protected rrt?: number;
    readonly connections: ConnectionInterface[];
    constructor(hostname: string, port?: number);
    get id(): string;
    isWritable(): boolean;
    isSecondary(): boolean;
    isReadable(): boolean;
    setType(type: HostType): void;
    getType(): HostType;
    getTypeFromIsMasterResult(isMasterCmdResult: any): HostType;
}
export {};
