import { ClassType } from '@deepkit/core';
import './mongo-serializer';
import { QueryCustomFields, QueryFieldNames } from '@deepkit/orm';
import { FilterQuery } from './query.model';
/**
 * Takes a mongo filter query and converts its class values to classType's mongo types, so you
 * can use it to send it to mongo.
 */
export declare function convertClassQueryToMongo<T, K extends keyof T, Q extends FilterQuery<T>>(classType: ClassType<T>, query: Q, fieldNamesMap?: QueryFieldNames, customMapping?: {
    [name: string]: (name: string, value: any, fieldNamesMap: {
        [name: string]: boolean;
    }) => any;
}): Q;
/**
 * Takes a mongo filter query and converts its plain values to classType's mongo types, so you
 * can use it to send it to mongo.
 */
export declare function convertPlainQueryToMongo<T, K extends keyof T>(classType: ClassType<T>, target: FilterQuery<T>, fieldNamesMap?: QueryFieldNames, customMapping?: QueryCustomFields): {
    [path: string]: any;
};
