var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
import { Entity, t, uuid } from '@deepkit/type';
import { User } from './user';
let UserCredentials = class UserCredentials {
    constructor(
    //one-to-one
    user) {
        this.user = user;
        this.id = uuid();
        this.password = '';
    }
};
__decorate([
    t.uuid.primary,
    __metadata("design:type", String)
], UserCredentials.prototype, "id", void 0);
__decorate([
    t,
    __metadata("design:type", String)
], UserCredentials.prototype, "password", void 0);
UserCredentials = __decorate([
    Entity('b-user-credentials'),
    __param(0, t.type(() => User).reference()),
    __metadata("design:paramtypes", [User])
], UserCredentials);
export { UserCredentials };
//# sourceMappingURL=credentials.js.map