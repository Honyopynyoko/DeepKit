import { afterEach } from '@jest/globals';
import { Database } from '@deepkit/orm';
import { MongoDatabaseAdapter } from '../src/adapter';
import { performance } from 'perf_hooks';
/**
 * Executes given exec() method 3 times and averages the consumed time.
 */
export async function bench(times, title, exec) {
    const start = performance.now();
    for (let i = 0; i < times; i++) {
        await exec(i);
    }
    const took = performance.now() - start;
    console.log(times, 'x benchmark', title, took, 'ms', took / times, 'per item');
}
const databases = [];
export async function createDatabase(dbName = 'testing') {
    dbName = dbName.replace(/\s+/g, '-');
    const database = new Database(new MongoDatabaseAdapter('mongodb://localhost/' + dbName));
    await database.adapter.client.dropDatabase(dbName);
    databases.push(database);
    return database;
}
afterEach(async () => {
    for (const database of databases) {
        await database.disconnect(true);
    }
    databases.splice(0, databases.length);
});
//# sourceMappingURL=utils.js.map