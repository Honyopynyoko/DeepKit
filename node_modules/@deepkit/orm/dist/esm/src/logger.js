import { ConsoleTransport, Logger, TimestampFormatter } from '@deepkit/logger';
export class DatabaseLogger {
    constructor() {
        this.active = false;
        this.public = false;
    }
    enableLogging() {
        if (!this.logger)
            this.logger = new Logger([new ConsoleTransport], [new TimestampFormatter]);
        this.active = true;
    }
    setLogger(logger) {
        this.logger = logger.scoped('deepkit/orm');
    }
    failedQuery(error, query, params) {
        if (!this.active || !this.logger)
            return;
        this.logger.error('failed query', query.trim(), params, error);
    }
    logQuery(query, params) {
        if (!this.active || !this.logger)
            return;
        this.logger.log(query.trim(), params);
    }
}
//# sourceMappingURL=logger.js.map