import { ClassSchema, ExtractPrimaryKeyType, ValidationFailedItem } from '@deepkit/type';
import { CustomError } from '@deepkit/core';
export interface Entity {
}
export declare type PatchResult<T> = {
    modified: number;
    returning: {
        [name in keyof T & string]?: T[name][];
    };
    primaryKeys: ExtractPrimaryKeyType<T>[];
};
export declare type DeleteResult<T> = {
    modified: number;
    primaryKeys: ExtractPrimaryKeyType<T>[];
};
export declare class DatabaseValidationError extends CustomError {
    readonly classSchema: ClassSchema;
    readonly errors: ValidationFailedItem[];
    constructor(classSchema: ClassSchema, errors: ValidationFailedItem[]);
}
