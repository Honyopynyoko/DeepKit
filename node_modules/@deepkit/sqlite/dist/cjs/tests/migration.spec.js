"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
const globals_1 = require("@jest/globals");
const sql_1 = require("@deepkit/sql");
const type_1 = require("../../type");
const sqlite_adapter_1 = require("../src/sqlite-adapter");
globals_1.test('sqlite custom type', async () => {
    const post = type_1.t.schema({
        id: type_1.t.number.autoIncrement.primary,
        slug: type_1.t.string.sqlite({ type: 'text' }),
        content: type_1.t.string,
        size: type_1.t.number.sqlite({ type: 'integer(4)' })
    }, { name: 'post' });
    const adapter = new sqlite_adapter_1.SQLiteDatabaseAdapter(':memory:');
    const [postTable] = adapter.platform.createTables([post]);
    globals_1.expect(postTable.getColumn('size').type).toBe('integer');
    globals_1.expect(postTable.getColumn('size').size).toBe(4);
    globals_1.expect(postTable.getColumn('content').type).toBe('text');
    await sql_1.schemaMigrationRoundTrip([post], adapter);
});
const user = type_1.t.schema({
    id: type_1.t.number.autoIncrement.primary,
    username: type_1.t.string.index({ unique: true }),
    created: type_1.t.date,
    deleted: type_1.t.boolean,
    logins: type_1.t.number,
}, { name: 'user' });
user.addIndex(['deleted'], '', { unique: true });
user.addIndex(['deleted', 'created']);
const post = type_1.t.schema({
    id: type_1.t.number.autoIncrement.primary,
    user: type_1.t.type(user).reference(),
    created: type_1.t.date,
    slag: type_1.t.string.index({ unique: true }),
    title: type_1.t.string,
    content: type_1.t.string,
}, { name: 'post' });
globals_1.test('sqlite', async () => {
    await sql_1.schemaMigrationRoundTrip([user, post], new sqlite_adapter_1.SQLiteDatabaseAdapter(':memory:'));
});
//# sourceMappingURL=migration.spec.js.map