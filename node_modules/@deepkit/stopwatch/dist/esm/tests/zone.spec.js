import { sleep } from '@deepkit/core';
import { expect, test } from '@jest/globals';
import { Zone } from '../src/zone';
test('zone', async () => {
    Zone.enable();
    expect(Zone.current()).toEqual({});
    const promises = [];
    promises.push(Zone.run({ sub: 1 }, async () => {
        var _a;
        await sleep(0.2);
        expect((_a = Zone.current()) === null || _a === void 0 ? void 0 : _a.sub).toBe(1);
    }));
    promises.push(Zone.run({ sub: 3 }, async () => {
        var _a;
        await sleep(0.2);
        expect((_a = Zone.current()) === null || _a === void 0 ? void 0 : _a.sub).toBe(3);
    }));
    promises.push(Zone.run({ sub: 2 }, async () => {
        var _a;
        await sleep(0.01);
        expect((_a = Zone.current()) === null || _a === void 0 ? void 0 : _a.sub).toBe(2);
        await new Promise(async (resolve) => {
            var _a;
            await sleep(0.01);
            expect((_a = Zone.current()) === null || _a === void 0 ? void 0 : _a.sub).toBe(2);
            resolve();
        });
    }));
    await Promise.all(promises);
});
//# sourceMappingURL=zone.spec.js.map