"use strict";
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.binaryTypes = exports.typedArrayNamesMap = exports.typedArrayMap = void 0;
const buffer_1 = require("buffer");
exports.typedArrayMap = new Map();
exports.typedArrayMap.set(String, 'string');
exports.typedArrayMap.set(Number, 'number');
exports.typedArrayMap.set(Date, 'date');
exports.typedArrayMap.set(Boolean, 'boolean');
exports.typedArrayMap.set(BigInt, 'bigint');
exports.typedArrayMap.set(Int8Array, 'Int8Array');
exports.typedArrayMap.set(buffer_1.Buffer, 'Uint8Array');
exports.typedArrayMap.set(Uint8Array, 'Uint8Array');
exports.typedArrayMap.set(Uint8ClampedArray, 'Uint8ClampedArray');
exports.typedArrayMap.set(Int16Array, 'Int16Array');
exports.typedArrayMap.set(Uint16Array, 'Uint16Array');
exports.typedArrayMap.set(Int32Array, 'Int32Array');
exports.typedArrayMap.set(Uint32Array, 'Uint32Array');
exports.typedArrayMap.set(Float32Array, 'Float32Array');
exports.typedArrayMap.set(Float64Array, 'Float64Array');
exports.typedArrayMap.set(ArrayBuffer, 'arrayBuffer');
exports.typedArrayNamesMap = new Map();
exports.typedArrayNamesMap.set('Int8Array', Int8Array);
exports.typedArrayNamesMap.set('Uint8Array', Uint8Array);
exports.typedArrayNamesMap.set('Uint8ClampedArray', Uint8ClampedArray);
exports.typedArrayNamesMap.set('Int16Array', Int16Array);
exports.typedArrayNamesMap.set('Uint16Array', Uint16Array);
exports.typedArrayNamesMap.set('Int32Array', Int32Array);
exports.typedArrayNamesMap.set('Uint32Array', Uint32Array);
exports.typedArrayNamesMap.set('Float32Array', Float32Array);
exports.typedArrayNamesMap.set('Float64Array', Float64Array);
exports.binaryTypes = [...exports.typedArrayNamesMap.keys(), 'arrayBuffer'];
//# sourceMappingURL=types.js.map