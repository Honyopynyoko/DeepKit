/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */
import { getClassSchema } from './model';
import { getClassName } from '@deepkit/core';
/**
 * @hidden
 */
export function isArrayType(classType, property) {
    return getClassSchema(classType).getProperty(property).isArray;
}
/**
 * @hidden
 */
export function isMapType(classType, property) {
    return getClassSchema(classType).getProperty(property).isMap;
}
/**
 * @hidden
 */
export function isExcluded(schema, property, wantedTarget) {
    const mode = schema.getProperty(property).exclude;
    if ('all' === mode) {
        return true;
    }
    return mode === wantedTarget;
}
export function getEntityName(classType) {
    const name = getClassSchema(classType).name;
    if (!name) {
        throw new Error('No @Entity() defined for class ' + getClassName(classType));
    }
    return name;
}
/**
 * @hidden
 */
export function getDatabaseName(classType) {
    return getClassSchema(classType).databaseSchemaName;
}
/**
 * @hidden
 */
export function getCollectionName(classType) {
    return getClassSchema(classType).collectionName;
}
//# sourceMappingURL=mapper.js.map