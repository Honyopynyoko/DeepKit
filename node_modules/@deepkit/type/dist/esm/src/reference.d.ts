import { ClassType } from '@deepkit/core';
import { ClassSchema } from './model';
export declare function isReference(obj: any): boolean;
export declare function getReferenceInfo<T>(obj: T): ReferenceInfo<T> | undefined;
export declare function getReferenceItemInfo<T>(obj: T): ReferenceItemInfo<T> | undefined;
export declare function getOrCreateReferenceItemInfo<T>(obj: T): ReferenceItemInfo<T>;
export declare function isReferenceHydrated(obj: any): boolean;
export declare function markAsHydrated(item: any): void;
export interface ReferenceInfo<T> {
    hydrator?: (item: T) => Promise<void>;
}
export interface ReferenceItemInfo<T> {
    hydrated: boolean;
}
export declare const referenceSymbol: unique symbol;
export declare const referenceItemSymbol: unique symbol;
export declare function createReference<T>(referenceClass: ClassType<T>, pk: {
    [name: string]: any;
}): T;
export declare function createReferenceClass<T>(classSchema: ClassSchema<T>): ClassType<T>;
